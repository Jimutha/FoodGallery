{"ast":null,"code":"var _jsxFileName = \"E:\\\\food\\\\springboot-app\\\\Frontend\\\\src\\\\pages\\\\Decorations.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport FoodPostCard from \"../components/FoodPostCard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { getPostsByCategory } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Decorations = () => {\n  _s();\n  const [decorations, setDecorations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchDecorations = async () => {\n      try {\n        const response = await getPostsByCategory(\"DECORATION\");\n        setDecorations(response.data);\n      } catch (error) {\n        console.error(\"Error fetching decorations:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDecorations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-12\",\n      children: \"Food Decorations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\",\n      children: decorations.map(decoration => /*#__PURE__*/_jsxDEV(FoodPostCard, {\n        post: decoration\n      }, decoration.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Decorations, \"/Ig2u6ifG+OG9Y/jeDso++oSSsY=\");\n_c = Decorations;\nexport default Decorations;\nvar _c;\n$RefreshReg$(_c, \"Decorations\");","map":{"version":3,"names":["useEffect","useState","FoodPostCard","LoadingSpinner","getPostsByCategory","jsxDEV","_jsxDEV","Decorations","_s","decorations","setDecorations","isLoading","setIsLoading","fetchDecorations","response","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","decoration","post","id","_c","$RefreshReg$"],"sources":["E:/food/springboot-app/Frontend/src/pages/Decorations.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport FoodPostCard from \"../components/FoodPostCard\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport { getPostsByCategory } from \"../services/api\";\r\n\r\nconst Decorations = () => {\r\n  const [decorations, setDecorations] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDecorations = async () => {\r\n      try {\r\n        const response = await getPostsByCategory(\"DECORATION\");\r\n        setDecorations(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching decorations:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchDecorations();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-12\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-12\">Food Decorations</h1>\r\n      {isLoading ? (\r\n        <div className=\"flex justify-center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n          {decorations.map((decoration) => (\r\n            <FoodPostCard key={decoration.id} post={decoration} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Decorations;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,kBAAkB,CAAC,YAAY,CAAC;QACvDM,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACRJ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKY,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3Cb,OAAA;MAAIY,SAAS,EAAC,sCAAsC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzEZ,SAAS,gBACRL,OAAA;MAAKY,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCb,OAAA,CAACH,cAAc;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,gBAENjB,OAAA;MAAKY,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEV,WAAW,CAACe,GAAG,CAAEC,UAAU,iBAC1BnB,OAAA,CAACJ,YAAY;QAAqBwB,IAAI,EAAED;MAAW,GAAhCA,UAAU,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}