{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:8080/api\"\n});\n\n// Request interceptor\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// Auth endpoints\nexport const registerUser = userData => API.post(\"/auth/register\", userData);\nexport const loginUser = credentials => API.post(\"/auth/login\", credentials);\n\n// Post endpoints\nexport const getPostsByCategory = category => API.get(`/posts/${category}`);\nexport const getPostById = id => API.get(`/posts/${id}`);\nexport const createPost = postData => API.post(\"/posts\", postData);\nexport const updatePost = (id, postData) => API.put(`/posts/${id}`, postData);\nexport const deletePost = id => API.delete(`/posts/${id}`);\n\n// Recipe endpoints\nexport const createRecipe = recipeData => {\n  const formData = new FormData();\n\n  // Append basic fields\n  formData.append(\"title\", recipeData.title);\n  formData.append(\"category\", \"RECIPE\");\n\n  // Append steps\n  recipeData.steps.forEach((step, index) => {\n    formData.append(`steps[${index}]`, step);\n  });\n\n  // Append media files\n  recipeData.media.forEach(file => {\n    formData.append(\"media\", file);\n  });\n  return API.post(\"/recipes\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const getRecipes = () => API.get(\"/recipes?category=RECIPE\");\nexport const getRecipeById = id => API.get(`/recipes/${id}`);\nexport const updateRecipe = (id, recipeData) => {\n  const formData = new FormData();\n  formData.append(\"title\", recipeData.title);\n  recipeData.steps.forEach((step, index) => {\n    formData.append(`steps[${index}]`, step);\n  });\n  if (recipeData.media) {\n    recipeData.media.forEach(file => {\n      if (file instanceof File) {\n        formData.append(\"media\", file);\n      }\n    });\n  }\n  return API.put(`/recipes/${id}`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const deleteRecipe = id => API.delete(`/recipes/${id}`);\n\n// Media endpoints\nexport const uploadMedia = file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  return API.post(\"/media/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const deleteMedia = mediaId => API.delete(`/media/${mediaId}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","registerUser","userData","post","loginUser","credentials","getPostsByCategory","category","get","getPostById","id","createPost","postData","updatePost","put","deletePost","delete","createRecipe","recipeData","formData","FormData","append","title","steps","forEach","step","index","media","file","getRecipes","getRecipeById","updateRecipe","File","deleteRecipe","uploadMedia","deleteMedia","mediaId"],"sources":["E:/git/FoodGallery/Frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n});\r\n\r\n// Request interceptor\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Response interceptor\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      window.location.href = \"/login\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth endpoints\r\nexport const registerUser = (userData) => API.post(\"/auth/register\", userData);\r\nexport const loginUser = (credentials) => API.post(\"/auth/login\", credentials);\r\n\r\n// Post endpoints\r\nexport const getPostsByCategory = (category) => API.get(`/posts/${category}`);\r\nexport const getPostById = (id) => API.get(`/posts/${id}`);\r\nexport const createPost = (postData) => API.post(\"/posts\", postData);\r\nexport const updatePost = (id, postData) => API.put(`/posts/${id}`, postData);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\n\r\n// Recipe endpoints\r\nexport const createRecipe = (recipeData) => {\r\n  const formData = new FormData();\r\n\r\n  // Append basic fields\r\n  formData.append(\"title\", recipeData.title);\r\n  formData.append(\"category\", \"RECIPE\");\r\n\r\n  // Append steps\r\n  recipeData.steps.forEach((step, index) => {\r\n    formData.append(`steps[${index}]`, step);\r\n  });\r\n\r\n  // Append media files\r\n  recipeData.media.forEach((file) => {\r\n    formData.append(\"media\", file);\r\n  });\r\n\r\n  return API.post(\"/recipes\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const getRecipes = () => API.get(\"/recipes?category=RECIPE\");\r\nexport const getRecipeById = (id) => API.get(`/recipes/${id}`);\r\nexport const updateRecipe = (id, recipeData) => {\r\n  const formData = new FormData();\r\n\r\n  formData.append(\"title\", recipeData.title);\r\n\r\n  recipeData.steps.forEach((step, index) => {\r\n    formData.append(`steps[${index}]`, step);\r\n  });\r\n\r\n  if (recipeData.media) {\r\n    recipeData.media.forEach((file) => {\r\n      if (file instanceof File) {\r\n        formData.append(\"media\", file);\r\n      }\r\n    });\r\n  }\r\n\r\n  return API.put(`/recipes/${id}`, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\nexport const deleteRecipe = (id) => API.delete(`/recipes/${id}`);\r\n\r\n// Media endpoints\r\nexport const uploadMedia = (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  return API.post(\"/media/upload\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteMedia = (mediaId) => API.delete(`/media/${mediaId}`);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}